pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the application...'
                sh 'mvn clean package' // Replace with actual build command
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                sh 'mvn test' // Replace with actual test command
            }
            post {
                success {
                    echo 'Tests passed.'
                    emailext subject: "Unit and Integration Tests: Success",
                             body: "The unit and integration tests completed successfully.",
                             to: "vedangthakur24000@gmail.com",
                             attachLog: true
                }
                failure {
                    echo 'Tests failed.'
                    emailext subject: "Unit and Integration Tests: Failure",
                             body: "The unit and integration tests failed. Please check the attached logs.",
                             to: "vedangthakur24000@gmail.com",
                             attachLog: true
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Running code analysis...'
                withSonarQubeEnv('SonarQube') { // 'SonarQube' is the name of the SonarQube server in Jenkins
                    sh 'mvn sonar:sonar' // Replace with actual code analysis command
                }
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Running security scan...'
                sh 'dependency-check --project my-project --scan ./' // Replace with actual security scan command
            }
            post {
                success {
                    echo 'Security scan passed.'
                    emailext subject: "Security Scan: Success",
                             body: "The security scan completed successfully.",
                             to: "vedangthakur24000@gmail.com",
                             attachLog: true
                }
                failure {
                    echo 'Security scan failed.'
                    emailext subject: "Security Scan: Failure",
                             body: "The security scan failed. Please check the attached logs.",
                             to: "vedangthakur24000@gmail.com",
                             attachLog: true
                }
            }
        }

        // Remove or comment out AWS Deployment Stages if not needed
        /*
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging environment...'
                // Replace with actual deployment command
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Replace with actual integration test command
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production environment...'
                // Replace with actual deployment command
            }
        }
        */
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
            emailext subject: "Pipeline Success: ${currentBuild.fullDisplayName}",
                     body: "The pipeline completed successfully.",
                     to: "vedangthakur24000@gmail.com"
        }
        failure {
            echo 'Pipeline failed.'
            emailext subject: "Pipeline Failure: ${currentBuild.fullDisplayName}",
                     body: "The pipeline failed. Please check the logs for details.",
                     attachLog: true,
                     to: "vedangthakur24000@gmail.com"
        }
    }
}
